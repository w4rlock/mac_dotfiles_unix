import chalk from 'chalk';
import _ from 'lodash';
import * as ui from '../ui.js';

const {
  black, red, yellow, green, white, bgRed,
} = chalk;

export const getNewRelicLicence = (applicationName) => {
  const raw = JSON.parse(process.env.NEW_RELIC_LICENSE_DICT);
  const licences = {};

  // normalize keys
  _.forEach(raw, (val, key) => {
    licences[key.toLowerCase()] = val;
  });

  if (licences.hasOwnProperty(applicationName.toLowerCase())) {
    return licences[applicationName.toLowerCase()];
  }

  return undefined;
};






export const checkNewRelicLicence = async (applicationName) => {
  let licenceKey;

  console.log();
  await ui.printTask('*', `Verificando licencia new relic para '${applicationName}' ...`);
  licenceKey = getNewRelicLicence(applicationName);

  if (licenceKey) {
    const secret = licenceKey.replace(licenceKey.slice(3, -1), '*'.repeat(15));
    await ui.printTask(' ', `Licencia encontrada '${secret}'.`);
    return licenceKey;
  }

  throw new Error(black.bgRed(`No encontramos NEW_RELIC_LICENSE_KEY para: '${applicationName}'
verifica la variable de entorno 'NEW_RELIC_LICENSE_DICT'`));
};


